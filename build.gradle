plugins {
    id 'maven-publish'
    id 'com.enonic.xp.app' version '3.5.2'
    id "com.github.node-gradle.node" version "7.0.0"
}

app {
    name = "${appName}"
    displayName = "${appDisplayName}"
    vendorName = "${vendorName}"
    vendorUrl = "${vendorUrl}"
    systemVersion = "${xpVersion}"
}

dependencies {
    implementation "com.enonic.xp:core-api:${xpVersion}"
    implementation "com.enonic.xp:portal-api:${xpVersion}"
    include "com.enonic.xp:lib-content:${xpVersion}"
    include "com.enonic.xp:lib-portal:${xpVersion}"
    include "com.enonic.lib:lib-thymeleaf:2.1.1"
    include "com.enonic.lib:lib-asset:1.0.0"
}

tasks.register('dev', Exec) {
    if (org.gradle.internal.os.OperatingSystem.current().isWindows()) {
        commandLine 'cmd', '/c', 'gradlew.bat', 'deploy', '-t'
    } else {
        commandLine './gradlew', 'deploy', '-t'
    }
}


task packageApplication {
    dependsOn(':build')
    group 'application'
    description 'Packages entire application'
}

task buildFrontend {
    dependsOn(':frontend:npmBuild')
}


tasks.named("processResources") {
    dependsOn(":buildFrontend")
}


publishing {
    publications {
        maven(MavenPublication) {
            groupId = "${group}"
            artifactId = "${projectName}"
            version = "${version}"

            from components.java
        }
    }
}

repositories {
    mavenLocal()
    mavenCentral()
    xp.enonicRepo()
}

node {
    // Version of node to use.
    version = '22.14.0'

    // Version of npm to use.
    npmVersion = '10.9.2'

    // If true, it will download node using above parameters.
    // If false, it will try to use globally installed node.
    download = true
}

